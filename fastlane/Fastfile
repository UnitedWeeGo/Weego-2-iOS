# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.36.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    
  end

  desc "Add a device and gen new prov profile"
  lane :add_device do
      device_name = prompt(text: "Enter the device name: ")
      device_udid = prompt(text: "Enter the device UDID: ")
      device_hash = {}
      device_hash[device_name] = device_udid
      register_devices(
        devices: device_hash
      )
    refresh_profiles
  end

  # A helper lane for refreshing provisioning profiles.
  lane :refresh_profiles do
    match(
      force_for_new_devices: true
   )
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Crashlytics"
  desc "This will also make sure the profile is up to date"
  lane :beta do

    build_number = Time.new.strftime("%Y.%m.%d.%H%M")
    increment_build_number(build_number: build_number)

    match
    gym
    
    emails = ['nick.velloff@gmail.com']
    groups = ['alpha']

    # upload to Beta by Crashlytics
    crashlytics(
      api_token: "cf61a6f5e0b3d0cdf796bf27c27d63d4ba1248d8",
      build_secret: "0ca9b215c4f1dcc019f640a56bc74c1c0dddcbbd9b943c9041b4033ac3ce4310",
      emails: emails,
      groups: groups,
      notifications: true
    )

    upload_symbols_to_crashlytics(api_token: "cf61a6f5e0b3d0cdf796bf27c27d63d4ba1248d8")
    clean_build_artifacts

  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
